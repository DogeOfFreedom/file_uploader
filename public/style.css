:root {
    /* Font sizes */
    --page-header: 1.5rem;
    --important: 1.25rem;
    --text: 1rem;

    /* Spacing */
    --big: 50px;
    --medium: 25px;
    --small: 10px;

    /* border */
    --border: 5px;

    /* specific sizing */
    --button-height: 65px;
    --header-height: 120px;

    /* UI Colours */
    --black4: rgb(8, 8, 8);
    --black3-5: rgb(15,15,15);
    --black3: rgb(26, 26, 26);
    --black2-5: rgb(35, 35, 35);
    --black2: rgb(50, 50, 50);
    --black1: rgb(77, 77, 77);

    --white1: white;
    --white2: rgb(180, 180, 180);

    --yellow: rgb(255, 221, 0);
    --yellowgreen: rgb(175, 238, 51);
    
    --red: rgb(216, 11, 11);

    /* Animated BG Items */
    --item-width: 100px;
    --num-items: 10
}

@font-face {
    font-family: poppins;
    src: url("./fonts/Poppins-Bold.ttf");
}

@font-face {
    font-family: raleway;
    src: url("./fonts/Raleway-VariableFont_wght.ttf");
}

body {   
    display: flex;
    flex-direction: column;
    margin: 0px;
    height: 100vh;
    background-color: var(--black4);
    overflow: hidden;
    justify-content: center;
    align-items: center;
}

/* Header */
header {
    position: absolute;
    top: 0%;
    display: flex;
    width: 100%;
    padding: var(--big) var(--big) 0px var(--big);
    box-sizing: border-box;
    gap: var(--medium);
    height: var(--header-height);
}

.headerNavButtonContainer {
    display: flex;
    gap: var(--medium)
}

a {
    text-decoration: none;
}

a:visited {
    color: white;
}

button {
    outline: none;
}

button i {
    margin-left: var(--small);
}

.rhombus {
    padding: var(--small) var(--medium);
    border-radius: var(--medium);
    background-color: var(--black3);
    border: var(--border) solid var(--black1);
    transform: skewX(15deg);
    display: flex;
    justify-content: center;
    align-items: center;
    height: var(--button-height);
    box-sizing: border-box;
    overflow: hidden;
}

.rhombus span {
    transform: skewX(-15deg);
    color: white;
}

.pageTitle {
    font-family: poppins;
    font-size: var(--page-header);
}

.main {
    flex: 1;   
    flex-direction: column;
    padding: 0px var(--big);
    padding-bottom: var(--big);
    width: calc(100vw - var(--big) * 2);
    max-height: 80vh;
    margin-top: calc(var(--big) + var(--header-height) + var(--medium));
    /* margin-bottom: var(--big); */
}

@media (max-width: 620px) {
    header {
        flex-direction: column;
        align-items: center;
    }

    .main {
        margin-top: calc(var(--big) + var(--header-height) + var(--medium) * 3);
    }
}

.mainGrid {
    border: var(--border) solid var(--black1);
    border-radius: var(--medium);
    height: 100%;
    display: grid;
    grid-template: 4fr 1fr / 100%;
    background-color: rgba(15,15,15, 0.3); 
}

.filesUIContainer {
    --radius: calc(var(--medium) - var(--border));

    position: relative;
    grid-row: 2 / 3;
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: var(--medium);
    width: 100%;
    box-sizing: border-box;
    border-radius: 0px 0px var(--radius) var(--radius);
    padding: var(--small) var(--medium);
    background-color: var(--black3);
}

.directoryUIContainer {
    display: flex;
    gap: var(--medium);
}

.directoryButtonsContainer {
    display: flex;
    gap: var(--medium);
}

.directory {
    font-family: poppins;
    font-size: var(--important);
    display: block;
    overflow: hidden;
    text-overflow: ellipsis;
}

@media (max-width: 900px) {
    .directoryButtonsContainer {
        display: flex;
        flex-direction: column;
    }
}

.actionBtn, .customFileUpload {
    font-family: poppins;
    font-size: var(--important);
    height: var(--button-height);
    min-width: 100px;
    background-color: var(--black3);
    border: var(--border) solid var(--black1);
    color: white;
    border-radius: 15px;
    padding: 0px var(--medium);
    cursor: pointer;
    font-weight: 1000;
}

.borderTransition:hover, .actionBtn:focus-visible {
    background-color: var(--yellow);
    border: var(--border) solid var(--yellow);
    box-shadow: none;
    color: black;
    animation: 1s colourTransitionBorder infinite alternate;
    animation-timing-function: linear;
}

.redBtn {
    border: var(--border) solid var(--red);
    color: var(--red);
}

.smallActionBtn {
    height: var(--button-height);
    width: var(--button-height);
    background-color: var(--black3);
    font-size: var(--page-header);
    border-radius: var(--medium);
    box-sizing: border-box;
    cursor: pointer;

    i {
        margin: 0px;
    }
}

header button:hover, .actionBtn:hover, .actionBtn:focus-visible, 
.customFileUpload:hover, .customFileUpload:focus-visible, 
.smallActionBtn:hover, .smallActionBtn:focus-visible {
    animation: colourTransitionBorder 1s linear infinite alternate, 
    pulse 0.9s cubic-bezier( 0.79, 0.18, 0.32, 0.83 ) infinite alternate;
    color: black;
}

@keyframes pulse {
    15% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    90% {
        transform: scale(1);
    }
}

@keyframes colourTransitionBorder {
    from {
        background-color: var(--yellow);
        border: var(--border) solid var(--yellow);
    }
    to {
        background-color: var(--yellowgreen);
        border: var(--border) solid var(--yellowgreen);
    }
}

.directoryContainer {
    --radius: calc(var(--medium) - var(--border));

    width: 100%;
    overflow-y: scroll;
    box-sizing: border-box;
    position: relative;
    display: grid;
    justify-content: center;
    grid-template-rows: repeat(auto-fill, 150px);
    grid-template-columns: repeat(auto-fit, 175px);
    padding: var(--medium);
    gap: var(--medium);
    border-radius: var(--radius) var(--radius) 0px 0px;
    margin: var(--small) 0px;
}

@supports selector(::-webkit-scrollbar) {
    .directoryContainer::-webkit-scrollbar {
        background: rgba(0,0,0,0);
        width: 10px;
    }

    .directoryContainer::-webkit-scrollbar-thumb {
        background: rgb(138, 138, 138);
        border-radius: var(--small);
        width: 5px;
}

.itemLinkContainer {
    justify-self: center;
    align-self: center;
    border-radius: var(--medium);
    height: 150px;
    width: 175px;
    outline: none;
}

.directoryItem {
    height: 150px;
    width: 175px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center; 
    color: white;
    cursor: pointer;
    border-radius: var(--small);
    outline: none;
}

.directoryItem:hover, .directoryItem:focus-visible {
    color: black;
    animation: 1s colourTransitionNoBorder infinite alternate;
    animation-timing-function: linear;
}

@keyframes colourTransitionNoBorder {
    from {
        background-color: var(--yellow);
    }
    to {
        background-color: var(--yellowgreen);
    }
}

.directoryItem p {
    font-family: poppins;
    font-size: var(--important);
    text-overflow: ellipsis;
    text-wrap: nowrap;
    text-align: center;
    overflow: hidden;
    width: 175px;
}

.directoryIcon {
    font-size: 75px;
    text-align: center;
}

.contentContainer {
    display: flex;
    justify-content: center;
}

.fileBackBtn {
    position: absolute;
    left: var(--medium);
}

.card {
    width: 1400px;
    gap: 10px;
    border: var(--border) solid var(--black4);
    border-radius: var(--big);
    padding: var(--medium);
    background-color: var(--black3);
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: var(--big);
    position: relative;
}

@media (max-width: 1400px) {
    .card {
        width: 90%;
    }
}

@media (max-width: 910px) {
    .fileBackBtn {
        position: absolute;
        left: 50%;
        bottom: 0%;
        transform: translate(-50%, calc(100% + var(--medium)));
    }
}

.card img {
    --radius: calc(var(--big) - var(--medium));
    
    max-height: 40vh;
    width: auto;
    max-width: 100%;
    height: auto;
    border-radius: var(--radius);
    margin-bottom: var(--big);
}

.previewIconContainer {
    font-family: poppins;
    font-size: 100px;
    color: white;
    margin-bottom: var(--big);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--medium);

    span {
        font-size: var(--important);
    }
}

.fileButtons {
    margin-top: 20px;
    display: flex;
    align-items: center;
    gap: var(--medium);
}

@media (max-width: 740px) {
    .fileButtons {
        flex-direction: column;
        width: 100%;

        button, a {
            width: 100%;
        }
    }

    .fileBackBtn {
        position: static;
        transform: translate(0, 0);
    }
}

/* @media (max-height: 1000px) { */
.scrollableBody {
    overflow: auto;
    overflow-x: hidden;
}
/* } */

.infoSegment {
    background-color: var(--black4);
    box-shadow: 0px 4px 0px 0px var(--black2-5);
    border-radius: var(--big);
    width: 100%;
    box-sizing: border-box;

    display: flex;
    justify-content: space-between;
    padding: var(--small) var(--medium);
}

.infoTitle, .infoData {
    font-size: 18px;
    font-family: poppins;
}

.infoTitle {
    color: var(--white2);
    flex: 1;    
}

.infoData {
    color: var(--white1);
    max-width: 70%;
    flex: 3;
    word-break: break-all;
    white-space: wrap;
    text-align: start;
}

@media (max-width: 670px) {
    .infoData {
        text-align: end;
    }
}

.text {
    color: var(--white1);
    font-size: var(--important);
    font-family: poppins;
    text-align: center;
}

form {
    align-self: center;
    width: 90%;
    max-width: 1020px;
    font-family: poppins;
    color: white;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: var(--big) 0px;
    border-radius: var(--medium) 0px var(--medium) var(--medium);
    background-color: var(--black3);
    box-shadow: inset 0px 0px 0px var(--border) var(--black4);
    border: var(--border) solid var(--black2);
    overflow: hidden;

    input, button, a {
        outline: none;
    }
}

dialog form {
    width: 100%;
    height: 100%;
}

.formHeader, .formInputContainer {
    box-sizing: border-box;
    padding: 0px var(--big);
}

.formHeader {
    width: calc(100% - calc(var(--border) * 2));
    border-radius: calc(var(--medium) - var(--border) * 2) 0px 0px 0px;
    margin-bottom: var(--medium);
    background-color: var(--black3-5);
    box-sizing: border-box;
    margin-top: var(--border);
}

.formHeader h1 {
    text-align: center;
}

.formInputContainer {
    /* background-color: var(--black2); */
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 20px;
    position: relative;
    margin-bottom: calc(var(--medium) + calc(var(--button-height) / 2));
}

.formInputContainer input {
    font-family: poppins;
    font-size: var(--page-header);
    border-radius: var(--big);
    padding: var(--medium);
    background-color: var(--black3);
    box-shadow: inset 0px 0px 0px var(--border) var(--black2);
    border: var(--border) solid var(--black4);
    color: white;
}

.formInputContainer input:focus-visible {
    animation: colourTransitionInnerShadow 0.4s ease-in-out 1;
}

@keyframes colourTransitionInnerShadow {
    from {
        box-shadow: inset 0px 0px 0px var(--border) var(--black2);
    }
    20% {
        box-shadow: inset 0px 0px 0px var(--border) var(--yellow);
    }
    80% {
        box-shadow: inset 0px 0px 0px var(--border) var(--yellowgreen);
    }
    to {
        box-shadow: inset 0px 0px 0px var(--border) var(--black2);
    }
}

.formInputContainer p {
    font-size: var(--important);
    text-align: center;
    margin-bottom: var(--small);

    a {
        margin-left: var(--small);
    }
}

.formInputContainer input, 
.formInputContainer button, 
.formInputContainer p {
    z-index: 2;
}

.formBGElement {
    background-color: var(--black4);
    position: absolute;
    height: 100%;
    width: calc(100% - 2 * var(--medium));
    left: 50%;
    top: 50%;
    transform: translate(-50%, calc(-50% + calc(var(--button-height) / 2)));
    z-index: 1;
    border-radius: var(--medium);
}

/* Overrides .actionBtn class */
.formBtn {
    height: auto;
    border-radius: var(--big);
    padding: calc(var(--medium) - var(--border)) var(--medium);
    font-size: var(--page-header);
    background-color: var(--black4);
    font-style: italic;
    box-sizing: border-box;
}

dialog {
    padding: 0px;
    background-color: rgba(0,0,0,0);
    border: 0px;
    overflow: visible;
}

dialog::backdrop {
    background-color: rgba(0,0,0,0.9);
}

.dialogButtonContainer {
    display: flex;
    justify-content: center;
    gap: var(--medium);
}

.fileUploadContainer {
    display: flex;
    margin-bottom: var(--medium);
}

/* Hide original input */
input[type="file"] {
    display: none;
}

/* Custom label that looks like the file input */
.customFileUpload {
    cursor: pointer; 
    display: block;
    width: 150px;
    display: flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
    text-align: center;
    padding: var(--small);
    margin-right: 20px;
    outline: none;
}

.uploadedFile {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex: auto;
    
    font-size: var(--important);
}

.uploadedFile span {
    min-width: 330px;
    max-width: 630px;
    text-align: start;
    text-wrap: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}

/* Loading Wheel */
.hidden {
    visibility: hidden;
}

.none {
    display: none;
}

.loadingContainer {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.loading {
    color: white;
    transform-origin: center;
    display: grid;
    gap: 0px;

    --timing: 1.2s;

    animation: rotating calc(var(--timing)*2) infinite ease-in-out, scaleUpAndDown var(--timing) infinite ease-in-out;
    grid-template-areas: 
        "loading1 loading2"
        "loading3 loading4";
}

.loading i {
    height: var(--page-header);
    width: var(--page-header);
    font-size: var(--page-header);
    display: flex;
    justify-content: center;
    align-items: center;
}

#loading1 {
    grid-area: loading1;
    animation: fadeInAndOut calc(var(--timing)*2) infinite ease-in-out alternate;
}

#loading2 {
    grid-area: loading2;
    animation: fadeInAndOutAlternate calc(var(--timing)*2) infinite ease-in-out alternate;
}

#loading3 {
    grid-area: loading3;
    animation: fadeInAndOutAlternate calc(var(--timing)*2) infinite ease-in-out alternate;
}

#loading4 {
    grid-area: loading4;
    animation: fadeInAndOut calc(var(--timing)*2) infinite ease-in-out alternate;
}

@keyframes rotating {
    from {
        transform: rotate(0deg);
    }
    50% {
        transform: rotate(90deg);
    }
    to {
        transform: rotate(180deg);
    }
}

@keyframes scaleUpAndDown {
    10% {
        gap: 0px;
    }
    40% {
        gap: 5px;
    }
    75% {
        gap: 0px;
    }    
}

@keyframes fadeInAndOut {
    from {
        opacity: 1;
    }
    50% {
        opacity: 0.1;
    }
    to {
        opacity: 1;
    }
}

@keyframes fadeInAndOutAlternate {
    from {
        opacity: 0.1;
    }
    50% {
        opacity: 1;
    }
    to {
        opacity: 0.1;
    }
}

#uploadFileModal p, #createFolderModal p {
    margin: 0px;
}

/* Moving Background Elements*/
.overflowContainer {
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    position: fixed;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: -1;
}

.animatedBGContainer {
    position: absolute;
    
    display: flex;
    justify-content: flex-end;    
    transform: rotate(-15deg);
    width: 300vw;
    height: 150vh;
    z-index: -1;
}

.animatedItemContainer {
    width: 240vw;        
    display: flex;
    transform: translateX(20vw);
    animation: horizontalTranslate 15s linear infinite;
}

.animatedItem { 
    height: 100%;
    width: 10%;
    overflow: visible;
    display: flex;
}

.bgColour {
    background-color: var(--black4);
    flex: 4;
}

.highlightColour {
    background-color: var(--black3-5);
    flex: 1
}

@keyframes horizontalTranslate {
    from {
        transform: translateX(4vw);
    }
    to {
        transform: translateX(-16vw);
    }
}

/* Moving Background Elements - small scale version*/
/* .animatedBGContainer {
    position: absolute;
    display: flex;
    justify-content: flex-end;    
    transform: rotate(-15deg);
    width: 60vw;
    height: 200px;
    z-index: -1;
    border: 1px solid rgb(0, 179, 255);
}

.webpage {
    position: absolute;
    left: 50%;
    transform: translateX(-50%) rotate(15deg);
    height: 100%;
    width: 20vw;
    background-color: rgba(255, 106, 0, 0.95);
    z-index: 100;
    transform-origin: center;
}

.animatedItemContainer {
    width: 48vw;        
    display: flex;
    transform: translateX(4vw);
    animation: horizontalTranslate 5s linear infinite;
}

.animatedItem { 
    height: 100%;
    width: 10%;
    background-color: yellowgreen;
    overflow: visible;
    display: flex;
}

.bgColour, .highlightColour {
    flex: auto;
}

.bgColour {
    background-color: antiquewhite;
}

.highlightColour {
    background-color: yellowgreen;
}

@keyframes horizontalTranslate {
    from {
        transform: translateX(4vw);
    }
    to {
        transform: translateX(-16vw);
    }
} */